// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StepChange.Blogger.DAL.Persistence;

namespace StepChange.Blogger.Web.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20220912074425_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StepChange.Blogger.DAL.Models.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("StepChange.Blogger.DAL.Models.BlogPublisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Publisher")
                        .IsUnique();

                    b.HasIndex("Role");

                    b.ToTable("BlogPublishers");
                });

            modelBuilder.Entity("StepChange.Blogger.DAL.Models.PublisherRole", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PublisherRoles");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Can create and edit all blog posts."
                        },
                        new
                        {
                            Id = 1,
                            Description = "Can create, edit and delete all blog posts."
                        });
                });

            modelBuilder.Entity("StepChange.Blogger.DAL.Models.BlogPost", b =>
                {
                    b.HasOne("StepChange.Blogger.DAL.Models.BlogPublisher", "BlogPublisher")
                        .WithMany("BlogPosts")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StepChange.Blogger.DAL.Models.BlogPublisher", b =>
                {
                    b.HasOne("StepChange.Blogger.DAL.Models.PublisherRole", "PublisherRole")
                        .WithMany("BlogPublishers")
                        .HasForeignKey("Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
